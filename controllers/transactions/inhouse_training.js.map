{"version":3,"sources":["../../../src/controllers/transactions/inhouse_training.js"],"names":["config","db","api","post","req","res","next","insertInHouseTraining","body","then","status","json","data","catch","err","result","getAccountByUserId","user","id","getInfoById","account","profile","learner","insertInterestedLearner","_id","insertInterestedTraining","ihtr","getInfoByIdArrayReturnIds","ids","insertGoingLearners","ihtr_id","learners","removeInterestedLearner","removeInterestedTraining","get","getAllInhouseTrainings","count","length","getInterestedLearnerIds","params","getInfoByIdArray","interested_learners","getGoingLearnerIds","going_learners","searchByKey","key"],"mappings":"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","file":"inhouse_training.js","sourcesContent":["// Core\r\nimport mongoose from 'mongoose';\r\nimport Router from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport passport from 'passport';\r\nimport { validationResult } from 'express-validator/check';\r\nimport { matchedData } from 'express-validator/filter';\r\nimport Promise from 'promise';\r\n\r\n// Utils\r\nimport config from '../../config';\r\n\r\n// Middlewares\r\nimport { authenticate, isGurus, isLearner } from '../../middlewares/authmiddleware';\r\n\r\n// Repos\r\nimport inhouse_training_repo from '../../lib/repo/inhouse_training_repo';\r\nimport account_repo from '../../lib/repo/account_repo';\r\nimport learner_repo from '../../lib/repo/learner_repo';\r\n\r\nexport default ({ config, db}) => {\r\n    let api = Router()\r\n\r\n    // '/v1/ihtraining/new'\r\n    api.post('/new', authenticate, isGurus, (req, res, next) => {\r\n        inhouse_training_repo.insertInHouseTraining(req.body)\r\n            .then(data => res.status(200).json(data))\r\n            .catch(err => next(err));\r\n    });\r\n\r\n    // '/v1/ihtraining/interested/learner'\r\n    api.post('/interested/learner', authenticate, isLearner, (req, res, next) => {\r\n        let result = {};\r\n        account_repo.getAccountByUserId(req.user.id)\r\n            .then(account => learner_repo.getInfoById(account.profile))\r\n            .then(learner => {\r\n                result = learner;\r\n                return inhouse_training_repo.insertInterestedLearner(req.body.id, learner._id)\r\n            })\r\n            .then(ihtr => learner_repo.insertInterestedTraining(result._id, ihtr._id))\r\n            .then(data => res.status(200).json(data))\r\n            .catch(err => next(err));  \r\n    });\r\n\r\n    // '/v1/ihtraining/going/learner'\r\n    api.post('/going/learner', authenticate, isGurus, (req, res, next) => {\r\n        learner_repo.getInfoByIdArrayReturnIds(req.body.ids)\r\n            .then(learners => inhouse_training_repo.insertGoingLearners(req.body.ihtr_id, learners))\r\n            .then(data => res.status(200).json(data))\r\n            .catch(err => next(err));  \r\n    });\r\n\r\n    // '/v1/ihtraining/interested/learner/remove'\r\n    api.post('/interested/learner/remove', authenticate, isLearner, (req, res, next) => {\r\n        let result = {};\r\n        account_repo.getAccountByUserId(req.user.id)\r\n            .then(account => learner_repo.getInfoById(account.profile))\r\n            .then(learner => {\r\n                result = learner;\r\n                return inhouse_training_repo.removeInterestedLearner(req.body.id, learner._id)\r\n            })\r\n            .then(ihtr => learner_repo.removeInterestedTraining(result._id, req.body.id))\r\n            .then(data => res.status(200).json(data))\r\n            .catch(err => next(err));  \r\n    });\r\n\r\n    // '/v1/ihtraining/all'\r\n    api.get('/all', authenticate, isGurus, (req, res, next) => {\r\n        inhouse_training_repo.getAllInhouseTrainings()\r\n            .then(data => res.status(200).json({count: data.length, data}))\r\n            .catch(err => next(err));\r\n    });\r\n\r\n    // '/v1/ihtraining/learner/all'\r\n    api.get('/learner/all', (req, res, next) => {\r\n        inhouse_training_repo.getAllInhouseTrainings()\r\n            .then(data => res.status(200).json({count: data.length, data}))\r\n            .catch(err => next(err));\r\n    });\r\n\r\n    // '/v1/ihtraining/interested/:id'\r\n    api.get('/interested/:id', authenticate, isGurus, (req, res, next) => {\r\n        inhouse_training_repo.getInterestedLearnerIds(req.params.id)\r\n            .then(interested_learners => learner_repo.getInfoByIdArray(interested_learners.interested_learners))\r\n            .then(learners => res.status(200).json({count: learners.length, learners}))\r\n            .catch(err => next(err));\r\n    });\r\n\r\n    // '/v1/ihtraining/going/:id'\r\n    api.get('/going/:id', authenticate, isGurus, (req, res, next) => {\r\n        inhouse_training_repo.getGoingLearnerIds(req.params.id)\r\n            .then(going_learners => learner_repo.getInfoByIdArray(going_learners.going_learners))\r\n            .then(learners => res.status(200).json({count: learners.length, learners}))\r\n            .catch(err => next(err));\r\n    });\r\n\r\n    // '/v1/ihtraining/search/:key'\r\n    api.get('/search/:key', (req, res, next) => {\r\n        inhouse_training_repo.searchByKey(req.params.key)\r\n            .then(data => res.status(200).json({count: data.length, data}))\r\n            .catch(err => next(err));\r\n    });\r\n\r\n    return api\r\n}\r\n"]}