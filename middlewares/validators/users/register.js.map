{"version":3,"sources":["../../../../src/middlewares/validators/users/register.js"],"names":["learnerRegValidation","isEmail","withMessage","trim","normalizeEmail","isLength","min","exists","custom","value","req","body","password","smeRegValidation","guruRegValidation","module","exports"],"mappings":"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","file":"register.js","sourcesContent":["import { check } from 'express-validator/check';\r\n\r\nlet learnerRegValidation = [\r\n    check('email')\r\n        .isEmail()\r\n        .withMessage('Please Enter a valid email address.')\r\n        .trim()\r\n        .normalizeEmail(),\r\n\r\n    check('firstname')\r\n        .trim()\r\n        .isLength({ min: 1 })\r\n        .withMessage('Please provide your first name.')\r\n        .exists(),\r\n\r\n    check('lastname')\r\n        .trim()\r\n        .isLength({ min: 1 })\r\n        .withMessage('Please provide your last name.')\r\n        .exists(),\r\n\r\n    check('u_type', 'user type should be learner')\r\n        .trim()\r\n        .exists()\r\n        .custom((value, { req }) => value === 'learner'),\r\n        \r\n    check('birth_date')\r\n        .trim()\r\n        .exists(),\r\n\r\n    check('contact_number')\r\n        .trim()\r\n        .exists(),\r\n\r\n    check('password')\r\n        .trim()\r\n        .isLength({ min: 6 })\r\n        .withMessage('Please provide a password with atleast 6 characters')\r\n        .exists(),\r\n\r\n    check('passwordConfirmation', 'passwordConfirmation field must have the same value as the password field')\r\n        .trim()\r\n        .exists()\r\n        .custom((value, { req }) => value === req.body.password)\r\n        .withMessage('Password and confirm passwords should match.')\r\n]\r\n\r\nlet smeRegValidation = [\r\n    check('email')\r\n        .isEmail()\r\n        .withMessage('Please Enter a valid email address.')\r\n        .trim()\r\n        .normalizeEmail(),\r\n\r\n    check('firstname')\r\n        .trim()\r\n        .isLength({ min: 3 })\r\n        .exists(),\r\n\r\n    check('lastname')\r\n        .trim()\r\n        .exists(),\r\n\r\n    check('u_type', 'user type should be an sme')\r\n        .trim()\r\n        .exists()\r\n        .custom((value, { req }) => value === 'sme'),\r\n        \r\n    check('birth_date')\r\n        .trim()\r\n        .exists(),\r\n\r\n    check('password')\r\n        .trim()\r\n        .exists(),\r\n    \r\n    check('passwordConfirmation', 'passwordConfirmation field must have the same value as the password field')\r\n        .trim()\r\n        .exists()\r\n        .custom((value, { req }) => value === req.body.password)\r\n]\r\n\r\nlet guruRegValidation = [\r\n    check('email')\r\n        .isEmail()\r\n        .withMessage('Please Enter a valid email address.')\r\n        .trim()\r\n        .normalizeEmail(),\r\n\r\n    check('firstname')\r\n        .trim()\r\n        .isLength({ min: 3 })\r\n        .exists(),\r\n\r\n    check('lastname')\r\n        .trim()\r\n        .exists(),\r\n\r\n    check('u_type', 'user type should be a gurus')\r\n        .trim()\r\n        .exists()\r\n        .custom((value, { req }) => value === 'gurus'),\r\n        \r\n    check('birth_date')\r\n        .trim()\r\n        .exists(),\r\n\r\n    check('password')\r\n        .trim()\r\n        .exists(),\r\n\r\n    check('passwordConfirmation', 'passwordConfirmation field must have the same value as the password field')\r\n        .trim()\r\n        .exists()\r\n        .custom((value, { req }) => value === req.body.password)\r\n]\r\n\r\nmodule.exports = { learnerRegValidation, smeRegValidation, guruRegValidation }"]}