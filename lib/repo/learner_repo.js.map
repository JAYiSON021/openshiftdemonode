{"version":3,"sources":["../../../src/lib/repo/learner_repo.js"],"names":["LearnerRepository","body","callback","console","log","Promise","fulfill","reject","newLearner","first_name","firstname","last_name","lastname","birth_date","Date","email","contact_number","save","err","learner","status","message","l_id","ihtr_id","findById","_learner","interested_trainings","push","__learner","update","$pull","l_ids","find","learners","responseFields","ids","forEach","l","_id","key","$or","$regex","RegExp","module","exports"],"mappings":";;;;AAAA;;;;;;;;IAEMA,iB;;;;;;;sCAEYC,I,EAAMC,Q,EAAU;;AAE1BC,oBAAQC,GAAR,CAAY,qCAAZ;;AAEA,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,aAAa,uBAAjB;AACAA,2BAAWC,UAAX,GAAwBR,KAAKS,SAA7B;AACAF,2BAAWG,SAAX,GAAuBV,KAAKW,QAA5B;AACAJ,2BAAWK,UAAX,GAAwB,IAAIC,IAAJ,CAASb,KAAKY,UAAd,CAAxB;AACAL,2BAAWO,KAAX,GAAmBd,KAAKc,KAAxB;AACAP,2BAAWQ,cAAX,GAA4Bf,KAAKe,cAAjC;AACAR,2BAAWS,IAAX,CAAgB,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC9B,wBAAID,GAAJ,EAAS;AACLX,+BAAOW,GAAP;AACH,qBAFD,MAEO,IAAG,CAACC,OAAJ,EAAa;AAChB,4BAAID,OAAM,EAAEE,QAAQ,GAAV,EAAeC,SAAS,mBAAxB,EAAV;AACAd,+BAAOW,IAAP;AACH,qBAHM,MAGA;AACHZ,gCAAQa,OAAR;AACH;AACJ,iBATD;AAUH,aAjBM,CAAP;AAkBH;;;iDAEwBG,I,EAAMC,O,EAAS;AACpCpB,oBAAQC,GAAR,CAAY,gDAAZ;;AAEA,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kCAAQiB,QAAR,CAAiBF,IAAjB,EAAuB,UAACJ,GAAD,EAAMO,QAAN,EAAmB;AACtC,wBAAIP,GAAJ,EAAS;AACLX,+BAAOW,GAAP;AACH,qBAFD,MAEO,IAAG,CAACO,QAAJ,EAAc;AACjB,4BAAIP,QAAM,EAAEE,QAAQ,GAAV,EAAeC,SAAS,mBAAxB,EAA6CF,SAASM,QAAtD,EAAV;AACAlB,+BAAOW,KAAP;AACH,qBAHM,MAGA;AACHO,iCAASC,oBAAT,CAA8BC,IAA9B,CAAmCJ,OAAnC;AACAE,iCAASR,IAAT,CAAc,UAACC,GAAD,EAAMU,SAAN,EAAoB;AAC9B,gCAAIV,GAAJ,EAAS;AACLX,uCAAOW,GAAP;AACH,6BAFD,MAEO,IAAG,CAACU,SAAJ,EAAe;AAClB,oCAAIV,QAAM,EAAEE,QAAQ,GAAV,EAAeC,SAAS,6BAAxB,EAAV;AACAd,uCAAOW,KAAP;AACH,6BAHM,MAGA;AACHZ,wCAAQsB,SAAR;AACH;AACJ,yBATD;AAUH;AACJ,iBAnBD;AAoBH,aArBM,CAAP;AAsBH;;;iDAEwBN,I,EAAMC,O,EAAS;AACpCpB,oBAAQC,GAAR,CAAY,gDAAZ;;AAEA,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,kCAAQsB,MAAR,CACI,EAAC,OAAOP,IAAR,EADJ,EAEI,EAAEQ,OAAO,EAAE,wBAAwBP,OAA1B,EAAT,EAFJ,EAGI,UAACL,GAAD,EAAMO,QAAN,EAAmB;AACf,wBAAIP,GAAJ,EAAS;AACLX,+BAAOW,GAAP;AACH,qBAFD,MAEO,IAAG,CAACO,QAAJ,EAAc;AACjB,4BAAIP,QAAM,EAAEE,QAAQ,GAAV,EAAeC,SAAS,mBAAxB,EAA6CF,SAASM,QAAtD,EAAV;AACAlB,+BAAOW,KAAP;AACH,qBAHM,MAGA;AACHZ,gCAAQmB,QAAR;AACH;AACJ,iBAZL;AAaH,aAfM,CAAP;AAgBH;;;oCAEWH,I,EAAM;AACdnB,oBAAQC,GAAR,CAAY,mCAAZ;;AAEA,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kCAAQiB,QAAR,CAAiBF,IAAjB,EAAuB,UAACJ,GAAD,EAAMC,OAAN,EAAkB;AACrC,wBAAID,GAAJ,EAAS;AACLX,+BAAOW,GAAP;AACH,qBAFD,MAEO,IAAG,CAACC,OAAJ,EAAa;AAChB,4BAAID,QAAM,EAAEE,QAAQ,GAAV,EAAeC,SAAS,mBAAxB,EAAV;AACAd,+BAAOW,KAAP;AACH,qBAHM,MAGA;AACHZ,gCAAQa,OAAR;AACH;AACJ,iBATD;AAUH,aAXM,CAAP;AAYH;;;yCAEgBY,K,EAAO;AACpB5B,oBAAQC,GAAR,CAAY,wCAAZ;AACA,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kCAAQyB,IAAR,CAAa,EAAC,OAAO,EAAC,OAAOD,KAAR,EAAR,EAAb,EAAsC,UAACb,GAAD,EAAMe,QAAN,EAAmB;AACrD,wBAAIf,GAAJ,EAAS;AACLX,+BAAOW,GAAP;AACH,qBAFD,MAEO,IAAG,CAACe,QAAJ,EAAc;AACjB,4BAAIf,QAAM,EAAEE,QAAQ,GAAV,EAAeC,SAAS,oBAAxB,EAAV;AACAd,+BAAOW,KAAP;AACH,qBAHM,MAGA;AACHZ,gCAAQ2B,QAAR;AACH;AACJ,iBATD;AAUH,aAXM,CAAP;AAYH;;;kDAEyBF,K,EAAO;AAC7B5B,oBAAQC,GAAR,CAAY,iDAAZ;AACA,gBAAM8B,iBAAiB,EAAC,OAAO,CAAR,EAAvB;AACA,mBAAO,IAAI7B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kCAAQyB,IAAR,CAAa,EAAC,OAAO,EAAC,OAAOD,KAAR,EAAR,EAAb,EAAsCG,cAAtC,EAAsD,UAAChB,GAAD,EAAMe,QAAN,EAAmB;AACrE,wBAAIf,GAAJ,EAAS;AACLX,+BAAOW,GAAP;AACH,qBAFD,MAEO,IAAG,CAACe,QAAJ,EAAc;AACjB,4BAAIf,QAAM,EAAEE,QAAQ,GAAV,EAAeC,SAAS,oBAAxB,EAAV;AACAd,+BAAOW,KAAP;AACH,qBAHM,MAGA;AACH,4BAAIiB,MAAM,EAAV;AACAF,iCAASG,OAAT,CAAiB,aAAK;AAClBD,gCAAIR,IAAJ,CAASU,EAAEC,GAAX;AACH,yBAFD;AAGAhC,gCAAQ6B,GAAR;AACH;AACJ,iBAbD;AAcH,aAfM,CAAP;AAgBH;;;wCAEeI,G,EAAK;AACjBpC,oBAAQC,GAAR,CAAY,4CAA4CmC,GAAxD;;AAEA,gBAAML,iBAAiB,EAAE,OAAO,CAAT,EAAY,SAAS,CAArB,EAAwB,cAAc,CAAtC,EAAyC,aAAa,CAAtD,EAAvB;AACA,mBAAO,IAAI7B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kCAAQyB,IAAR,CAAa;AACTQ,yBACA,CACI,EAAE,cAAc,EAACC,QAAQ,IAAIC,MAAJ,CAAWH,GAAX,EAAgB,IAAhB,CAAT,EAAhB,EADJ,EAEI,EAAE,aAAa,EAACE,QAAQ,IAAIC,MAAJ,CAAWH,GAAX,EAAgB,IAAhB,CAAT,EAAf,EAFJ,EAGI,EAAE,SAAS,EAACE,QAAQ,IAAIC,MAAJ,CAAWH,GAAX,EAAgB,IAAhB,CAAT,EAAX,EAHJ;AAFS,iBAAb,EAOGL,cAPH,EAOmB,UAAChB,GAAD,EAAMe,QAAN,EAAmB;AAC9B,wBAAIf,GAAJ,EAAS;AACLX,+BAAOW,GAAP;AACH,qBAFD,MAEO,IAAG,CAACe,QAAJ,EAAc;AACjB,4BAAIf,QAAM,EAAEE,QAAQ,GAAV,EAAeC,SAAS,oBAAxB,EAAV;AACAd,+BAAOW,KAAP;AACH,qBAHM,MAGA;AACHZ,gCAAQ2B,QAAR;AACH;AACR,iBAhBD;AAiBH,aAlBM,CAAP;AAmBH;;;;;;AAMLU,OAAOC,OAAP,GAAiB,IAAI5C,iBAAJ,EAAjB","file":"learner_repo.js","sourcesContent":["import Learner from '../../models/users/learner';\r\n\r\nclass LearnerRepository {\r\n\r\n    insertLearner(body, callback) {\r\n        \r\n        console.log('*** LearnerRepository.insertLearner');\r\n\r\n        return new Promise((fulfill, reject) => {\r\n            let newLearner = new Learner()\r\n            newLearner.first_name = body.firstname\r\n            newLearner.last_name = body.lastname\r\n            newLearner.birth_date = new Date(body.birth_date)\r\n            newLearner.email = body.email\r\n            newLearner.contact_number = body.contact_number\r\n            newLearner.save((err, learner) => {\r\n                if (err) {\r\n                    reject(err)\r\n                } else if(!learner) {\r\n                    let err = { status: 404, message: 'learner not found' }\r\n                    reject(err);\r\n                } else {\r\n                    fulfill(learner);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    insertInterestedTraining(l_id, ihtr_id) {\r\n        console.log('*** LearnerRepository.insertInterestedTraining');\r\n\r\n        return new Promise((fulfill, reject) => {\r\n            Learner.findById(l_id, (err, _learner) => {\r\n                if (err) {\r\n                    reject(err)\r\n                } else if(!_learner) {\r\n                    let err = { status: 404, message: 'learner not found', learner: _learner }\r\n                    reject(err);\r\n                } else {\r\n                    _learner.interested_trainings.push(ihtr_id);\r\n                    _learner.save((err, __learner) => {\r\n                        if (err) {\r\n                            reject(err)\r\n                        } else if(!__learner) {\r\n                            let err = { status: 500, message: 'cannot complete transaction' }\r\n                            reject(err);\r\n                        } else {\r\n                            fulfill(__learner);\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    removeInterestedTraining(l_id, ihtr_id) {\r\n        console.log('*** LearnerRepository.removeInterestedTraining');\r\n\r\n        return new Promise((fulfill, reject) => {\r\n\r\n            Learner.update(\r\n                {\"_id\": l_id},\r\n                { $pull: { \"interested_trainings\": ihtr_id } },\r\n                (err, _learner) => {\r\n                    if (err) {\r\n                        reject(err)\r\n                    } else if(!_learner) {\r\n                        let err = { status: 404, message: 'learner not found', learner: _learner }\r\n                        reject(err);\r\n                    } else {\r\n                        fulfill(_learner);\r\n                    }\r\n                })\r\n        })\r\n    }\r\n\r\n    getInfoById(l_id) {\r\n        console.log('*** LearnerRepository.getInfoById');\r\n\r\n        return new Promise((fulfill, reject) => {\r\n            Learner.findById(l_id, (err, learner) => {\r\n                if (err) {\r\n                    reject(err)\r\n                } else if(!learner) {\r\n                    let err = { status: 404, message: 'learner not found' }\r\n                    reject(err);\r\n                } else {\r\n                    fulfill(learner);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    getInfoByIdArray(l_ids) {\r\n        console.log('*** LearnerRepository.getInfoByIdArray');\r\n        return new Promise((fulfill, reject) => {\r\n            Learner.find({\"_id\": {\"$in\": l_ids}}, (err, learners) => {\r\n                if (err) {\r\n                    reject(err)\r\n                } else if(!learners) {\r\n                    let err = { status: 404, message: 'learners not found' }\r\n                    reject(err);\r\n                } else {\r\n                    fulfill(learners);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    getInfoByIdArrayReturnIds(l_ids) {\r\n        console.log('*** LearnerRepository.getInfoByIdArrayReturnIds');\r\n        const responseFields = {\"_id\": 1};\r\n        return new Promise((fulfill, reject) => {\r\n            Learner.find({\"_id\": {\"$in\": l_ids}}, responseFields, (err, learners) => {\r\n                if (err) {\r\n                    reject(err)\r\n                } else if(!learners) {\r\n                    let err = { status: 404, message: 'learners not found' }\r\n                    reject(err);\r\n                } else {\r\n                    let ids = [];\r\n                    learners.forEach(l => {\r\n                        ids.push(l._id);\r\n                    });\r\n                    fulfill(ids);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    searchByKeyword(key) {\r\n        console.log('*** LearnerRepository.searchByKeyword: ' + key);\r\n\r\n        const responseFields = { \"_id\": 1, \"email\": 1, \"first_name\": 1, \"last_name\": 1 };\r\n        return new Promise((fulfill, reject) => {\r\n            Learner.find({\r\n                $or: \r\n                [\r\n                    { \"first_name\": {$regex: new RegExp(key, \"ig\")} },\r\n                    { \"last_name\": {$regex: new RegExp(key, \"ig\")} },\r\n                    { \"email\": {$regex: new RegExp(key, \"ig\")} }\r\n                ]\r\n            }, responseFields, (err, learners) => {\r\n                    if (err) {\r\n                        reject(err)\r\n                    } else if(!learners) {\r\n                        let err = { status: 404, message: 'learners not found' }\r\n                        reject(err);\r\n                    } else {\r\n                        fulfill(learners);\r\n                    }\r\n            })\r\n        })\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nmodule.exports = new LearnerRepository();"]}